{% macro renderField(field, label, name, value, type, options, is_required) %}
    <div class="col-sm-12 form-group{{ is_required ? ' required' }}" data-value="{{value}}">
        <label for="{{ name }}" class="control-label">{{ label }}</label>
        {% if type == 'select' %}
            <select name="{{ name }}" id="{{ name }}" class="form-control" {{ is_required ? 'required' }}>
                {% for option in options %}
                    <option value="{{ option.value }}" {{ option.value == value ? 'selected' }}>{{ option.label }}</option>
                {% endfor %}
            </select>
        {% else %}
            <input type="text" name="{{ name }}" id="{{ name }}" value="{{ value }}" class="form-control" {{ is_required ? 'required' }} />
        {% endif %}
    </div>
{% endmacro %}

{% import _self as forms %}

<div id="shipping_address-data">
    {% if addresses %}
        <div style="padding:0 10px">
            <div class="radio">
                <label>
                    <input type="radio" name="shipping_address" value="existing" id="shipping-address-existing" checked="checked" />
                    {{ text_address_existing }}
                </label>
            </div>
            <div id="shipping-existing">
                <select name="address_id" class="form-control">
                    {% for address in addresses %} 
                        {% if address.address_id == address_id %} 
                            <option value="{{ address.address_id }}" selected="selected">
                                {{ address.firstname }} {{ address.lastname }} , {{ address.address_1 }} , {{ address.city }} , {{ address.postcode }} , {{ address.zone }} , {{ address.country }}
                            </option>
                        {% else %}   
                            <option value="{{ address.address_id }}">
                                {{ address.firstname }} {{ address.lastname }} , {{ address.address_1 }} , {{ address.city }} , {{ address.postcode }} , {{ address.zone }} , {{ address.country }}
                            </option>
                        {% endif %} 
                    {% endfor %}
                </select>
            </div>
            <div class="radio">
                <label>
                    <input type="radio" name="shipping_address" value="new" id="shipping-address-new" />
                    {{ text_address_new }}
                </label>
            </div>
        </div>
    {% else %}   
        <input type="radio" name="shipping_address" value="new" id="shipping-address-new" class="hide" checked="checked" />
    {% endif %}

    <div id="shipping_address-new" style="display: {{ addresses ? 'none' : 'block' }};">
        {% set address_selects = {
            'field_country': {'name': 'country_id', 'label': entry_country, 'options': countries|map(c => {'value': c.country_id, 'label': c.name})},
            'field_zone':    {'name': 'zone_id',    'label': entry_zone,    'options': zones|map(z => {'value': z.zone_id, 'label': z.name})}
        } %}

        {% for key, f in fields_address %}
            {% set is_required = f.required ?? false %}
            {% if f.display %}
                {% if attribute(address_selects, key) is defined %}
                    {% set input_value = key == 'field_country' ? country_id : key == 'field_zone' ? zone_id : '' %}
                    {{ forms.renderField(
                        key,
                        attribute(address_selects[key], 'label'),
                        attribute(address_selects[key], 'name'),
                        input_value,
                        'select',
                        attribute(address_selects[key], 'options'),
                        is_required
                    ) }}
                {% else %}
                    {% set input_name = key|replace({'field_': ''}) %}
                    {% set input_value = attribute(_context, input_name) %}
                    {{ forms.renderField(key, attribute(_context, 'entry_' ~ input_name), input_name, input_value, 'text', is_required) }}
                {% endif %}
            {% endif %}
        {% endfor %}
    </div><!-- CLOSE WRAPPING BOX -->
</div>
<script type="text/javascript"><!--
$(document).ready(function() {
    $('#shipping-address input[name="shipping_address"]').on('change', function() {
        if (this.value == 'new') {
            $('#shipping-existing').slideUp();
            $('#shipping-new').slideDown();
            setTimeout(function() {
                $('#shipping-address select[name="country_id"]').trigger('change');
            }, 200);
        } else {
            $('#shipping-existing').slideDown();
            $('#shipping-new').slideUp();
            reloadShippingMethodById($('#shipping-address select[name="address_id"]').val());
        }
    });

    $('#shipping-address input[name="shipping_address"]:checked').trigger('change');

    // Sort the custom fields
    $('#custom-field-shipping .custom-field[data-sort]').detach().each(function() {
        var $fields = $('#shipping-new .col-sm-6');
        var sort = parseInt($(this).attr('data-sort'));
        if (sort >= 0 && sort <= $fields.length) {
            $fields.eq(sort).before(this);
        } else if (sort > $fields.length) {
            $fields.last().after(this);
        } else if (sort < -$fields.length) {
            $fields.first().before(this);
        }
    });

    $('#shipping-address button[id^="button-shipping-custom-field"]').on('click', function() {
        var node = this;
        $('#form-upload').remove();
        $('body').prepend('<form enctype="multipart/form-data" id="form-upload" style="display: none;"><input type="file" name="file" /></form>');
        $('#form-upload input[name="file"]').trigger('click');

        timer = setInterval(function() {
            if ($('#form-upload input[name="file"]').val() != '') {
                clearInterval(timer);
                $.ajax({
                    url: 'index.php?route=tool/upload',
                    type: 'post',
                    dataType: 'json',
                    data: new FormData($('#form-upload')[0]),
                    cache: false,
                    contentType: false,
                    processData: false,
                    beforeSend: function() { $(node).button('loading'); },
                    complete: function() { $(node).button('reset'); },
                    success: function(json) {
                        $('.text-danger').remove();
                        if (json['error']) {
                            $(node).parent().find('input[name^="custom_field"]').after('<div class="text-danger">' + json['error'] + '</div>');
                        }
                        if (json['success']) {
                            alert(json['success']);
                            $(node).parent().find('input[name^="custom_field"]').attr('value', json['file']);
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                    }
                });
            }
        }, 500);
    });

    $('#shipping-address select[name="zone_id"]').on('change', function() {
        reloadShippingMethod('shipping');
    });

    $('#shipping-address select[name="country_id"]').on('change', function() {
        $.ajax({
            url: 'index.php?route=checkout/xd_checkout/checkout/country&country_id=' + this.value,
            dataType: 'json',
            cache: false,
            beforeSend: function() { $('#shipping-address select[name="country_id"]').after('<i class="fa fa-spinner fa-spin"></i>'); },
            complete: function() { $('.fa-spinner').remove(); },
            success: function(json) {
                if (json['postcode_required'] == '1') {
                    $('#shipping-postcode-required').addClass('required');
                } else {
                    $('#shipping-postcode-required').removeClass('required');
                }

                var html = '';
                if (json['zone'] != '') {
                    for (var i = 0; i < json['zone'].length; i++) {
                        html += '<option value="' + json['zone'][i]['zone_id'] + '"';
                        if (json['zone'][i]['zone_id'] == '{{ zone_id }}') {
                            html += ' selected="selected"';
                        }
                        html += '>' + json['zone'][i]['name'] + '</option>';
                    }
                } else {
                    html += '<option value="0" selected="selected">{{ text_none }}</option>';
                }

                $('#shipping-address select[name="zone_id"]').html(html).trigger('change');
            },
            {% if debug %}
            error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
            {% endif %}
        });
    });

    $('#shipping-address select[name="address_id"]').on('change', function() {
        if ($('#shipping-address input[name="shipping_address"]:checked').val() == 'new') {
            reloadShippingMethod('shipping');
        } else {
            reloadShippingMethodById($('#shipping-address select[name="address_id"]').val());
        }
    });
});
//--></script>